"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.20.
"""

import os
from pathlib import Path
import dj_database_url
from dotenv import load_dotenv, dotenv_values

# BASE_DIR
BASE_DIR = Path(__file__).resolve().parent.parent

# Cargar primero .env.local por defecto
env_path = BASE_DIR / ".env.local"

# Comprobamos si .env.production indica que estamos en producción
production_env = dotenv_values(BASE_DIR / ".env.production")
if production_env.get("ENV", "").lower() == "production":
    env_path = BASE_DIR / ".env.production"

# Finalmente, cargamos el .env seleccionado SIN sobreescribir variables existentes
load_dotenv(dotenv_path=env_path, override=False)

# === ENTORNO ===
ENVIRONMENT = os.getenv("ENV", "local").lower()
DEBUG = os.getenv("DEBUG", "false").lower() in ("true", "1", "yes")
RENDER = os.getenv("RENDER", "false").lower() == "true"

print(f"[ENV]: {ENVIRONMENT}")
print(f"[DEBUG]: {DEBUG}")
print(f"[RENDER]: {RENDER}")

USE_STATIC_FRONTEND = ENVIRONMENT == "production"

# === CONFIGURACIÓN GENERAL ===
SECRET_KEY = os.getenv("SECRET_KEY", "clave-insegura-por-defecto")
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "*").split(",")

# === APLICACIONES ===
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'reservas',
]

# === MIDDLEWARE ===
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# === JWT y API ===
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
}

# === RUTAS Y WSGI ===
ROOT_URLCONF = 'backend.urls'
WSGI_APPLICATION = 'backend.wsgi.application'

# === TEMPLATES ===
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# === BASE DE DATOS ===
if ENVIRONMENT == "production" and os.getenv("DATABASE_URL"):
    DATABASES = {
        'default': dj_database_url.config(conn_max_age=600, ssl_require=True)
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv("DB_NAME", "padel_db"),
            'USER': os.getenv("DB_USER", "zoclark"),
            'PASSWORD': os.getenv("DB_PASSWORD", ""),
            'HOST': os.getenv("DB_HOST", "localhost"),
            'PORT': os.getenv("DB_PORT", "5432"),
        }
    }

# === VALIDADORES DE CONTRASEÑAS ===
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# === INTERNACIONALIZACIÓN ===
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# === ARCHIVOS ESTÁTICOS ===
STATIC_URL = '/static/'

#STATICFILES_DIRS = [BASE_DIR / 'backend' / 'staticfiles']
#STATIC_ROOT = BASE_DIR / 'backend' / 'staticfiles_root'

if DEBUG:
    STATICFILES_DIRS = [BASE_DIR / 'backend' / 'staticfiles']
else:
    STATICFILES_DIRS = []
    STATIC_ROOT = BASE_DIR / 'backend' / 'staticfiles'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
#STATICFILES_STORAGE = 'whitenoise.storage.StaticFilesStorage'
# === CONFIGURACIÓN EXTRA ===
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'reservas.Usuario'
CORS_ALLOW_ALL_ORIGINS = True
CSRF_COOKIE_SECURE = True

CORS_ALLOWED_ORIGINS = [
    'http://127.0.0.1:8000',
    'https://padel-clases.onrender.com',
]
